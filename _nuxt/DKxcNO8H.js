import{g as S,r,k as c,z as V,c as l,o as s,p as f,a as n,a4 as F,n as p,F as v,h as B,t as i,d as z,l as C,x as I,_ as L}from"./DZksMEen.js";const $={class:"fieldset"},N={key:0,class:"required-mark"},q={key:1},w={class:"c-texttype"},A={class:"c-inp-el"},D=["placeholder","disabled","maxlength"],M={key:0,class:"group_feedback"},T={class:"feedback char-count"},E={class:"count"},P="textField",R=S({__name:"FieldSet",props:{label:{type:String,default:""},modelValue:{type:String,default:""},placeholder:{type:String,default:"텍스트를 입력해주세요."},disabled:{type:Boolean,default:!1},customStyle:{type:String,default:""},isInvalid:{type:Boolean,default:!1},countArea:{type:Boolean,default:!0},maxLength:{type:Number,default:200},labelSize:{type:String,default:"1.2rem"},labelClass:{type:String,default:""}},emits:["update:modelValue","focus","blur"],setup(e,{emit:y}){const u=e,b=y;r(!1),r("");const m=c(()=>u.label.includes("*")),g=c(()=>m.value?u.label.split(/([*])/).filter(a=>a!==""):[]),d=r(u.modelValue),h=c(()=>d.value.length);V(()=>u.modelValue,a=>{d.value=a});function k(a){const t=a.target;d.value=t.value,b("update:modelValue",t.value)}return(a,t)=>(s(),l("div",$,[e.label?(s(),l("label",{key:0,for:P,class:p(["c-label",e.labelClass]),style:F({fontSize:e.labelSize})},[m.value?(s(!0),l(v,{key:0},B(g.value,(o,x)=>(s(),l("span",{key:x},[o==="*"?(s(),l("span",N,"*")):(s(),l("span",q,i(o),1))]))),128)):(s(),l(v,{key:1},[z(i(e.label),1)],64))],6)):f("",!0),n("div",w,[n("div",A,[C(n("textarea",{"onUpdate:modelValue":t[0]||(t[0]=o=>d.value=o),name:"textField",id:"textField",placeholder:e.placeholder,class:p(["c-textarea",a.$attrs.class,{"is-invalid":e.isInvalid}]),disabled:e.disabled,maxlength:e.maxLength,onInput:k,onFocus:t[1]||(t[1]=o=>a.$emit("focus")),onBlur:t[2]||(t[2]=o=>a.$emit("blur"))},null,42,D),[[I,d.value]])]),e.countArea?(s(),l("div",M,[n("p",T,[n("span",E,i(h.value),1),t[3]||(t[3]=n("span",null,"/",-1)),n("span",null,i(e.maxLength),1)])])):f("",!0)])]))}}),j=L(R,[["__scopeId","data-v-cfa9aa44"]]);export{j as F};
